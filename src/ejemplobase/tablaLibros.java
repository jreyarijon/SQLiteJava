/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemplobase;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josemolamazo
 */
public class tablaLibros extends javax.swing.JFrame {

    private Connection conexion = null;
    private String nome = "base";
    private String pw = "1234";
    private String url = "jdbc:sqlite:ejemploBase.db";

    /**
     * Creates new form tablaLibros
     */
    public tablaLibros() {
        initComponents();
        mostrar();

        //Visualizamos a taboa
        pLibros.setVisible(true);
    }

    public void mostrar() {

        ResultSet datos = null;
        Statement st = null;
        DefaultTableModel mod = new DefaultTableModel();
        mod.setColumnIdentifiers(new Object[]{"Isbn", "Titulo"});
        try {
            //Establezco conexion coa base de datos ubicada na carpeta do proxecto.
            conexion = DriverManager.getConnection(url, nome, pw);

            //Elimino a tabla libros se existe na B.D.
            st = conexion.createStatement();
            st.executeUpdate("DROP TABLE IF EXISTS libros");

            //Facemos inserci√≥ns de filas na tabla
            st.executeUpdate("CREATE TABLE libros (isbn string, titulo string, primary key(isbn))");
            st.executeUpdate("INSERT INTO libros(isbn, titulo) VALUES ('1a', 'Harry Potter')");
            st.executeUpdate("INSERT INTO libros(isbn, titulo) VALUES ('2b','Java')");
            st.executeUpdate("INSERT INTO libros(isbn, titulo) VALUES ('3c','Bioloxia')");

            //Actualizamos unha fila cambiandolle un valor
            st.executeUpdate("UPDATE libros SET titulo='Bioloxia e Xeoloxia' WHERE isbn='3c'");

            //Busco a taboa cunha sentencia SQL.
            datos = st.executeQuery("SELECT * FROM libros");

            //Mentres existan filas en libros, iranas colocando no array e despois na taboa.
            while (datos.next()) {
                Object[] fila = {datos.getString("Isbn"), datos.getString("Titulo")};
                mod.addRow(fila);
                tLibros.setModel(mod);
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
        } finally {

            //Pechamos a conexion con todo se estamos conectados cunha base de datos.
            try {
                if (conexion != null) {
                    datos.close();
                    st.close();
                    conexion.close();
                }
            } catch (Exception ex) {
                System.out.println("Error al cerrar: " + ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pLibros = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tLibros = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tLibros.setBackground(new java.awt.Color(204, 204, 204));
        tLibros.setForeground(new java.awt.Color(0, 0, 0));
        tLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Isbn", "Titulo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tLibros);

        javax.swing.GroupLayout pLibrosLayout = new javax.swing.GroupLayout(pLibros);
        pLibros.setLayout(pLibrosLayout);
        pLibrosLayout.setHorizontalGroup(
            pLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        pLibrosLayout.setVerticalGroup(
            pLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pLibros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pLibros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tablaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tablaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tablaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tablaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tablaLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pLibros;
    private javax.swing.JTable tLibros;
    // End of variables declaration//GEN-END:variables
}
